/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ValidatorSet,
  ValidatorSetInterface,
} from "../../abstracts/ValidatorSet";

const _abi = [
  {
    constant: false,
    inputs: [],
    name: "finalizeChange",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getValidators",
    outputs: [
      {
        name: "",
        type: "address[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "parentHash",
        type: "bytes32",
      },
      {
        indexed: false,
        name: "newSet",
        type: "address[]",
      },
    ],
    name: "InitiateChange",
    type: "event",
  },
] as const;

export class ValidatorSet__factory {
  static readonly abi = _abi;
  static createInterface(): ValidatorSetInterface {
    return new Interface(_abi) as ValidatorSetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ValidatorSet {
    return new Contract(address, _abi, runner) as unknown as ValidatorSet;
  }
}
