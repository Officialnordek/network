/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  BlockRewardBase,
  BlockRewardBaseInterface,
} from "../../abstracts/BlockRewardBase";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "benefactors",
        type: "address[]",
      },
      {
        name: "kind",
        type: "uint16[]",
      },
    ],
    name: "reward",
    outputs: [
      {
        name: "",
        type: "address[]",
      },
      {
        name: "",
        type: "uint256[]",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class BlockRewardBase__factory {
  static readonly abi = _abi;
  static createInterface(): BlockRewardBaseInterface {
    return new Interface(_abi) as BlockRewardBaseInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BlockRewardBase {
    return new Contract(address, _abi, runner) as unknown as BlockRewardBase;
  }
}
