/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  VotingBase,
  VotingBaseInterface,
} from "../../abstracts/VotingBase";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "_id",
        type: "uint256",
      },
      {
        name: "_choice",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        name: "creator",
        type: "address",
      },
    ],
    name: "BallotCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "id",
        type: "uint256",
      },
    ],
    name: "BallotFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        name: "decision",
        type: "uint256",
      },
      {
        indexed: true,
        name: "voter",
        type: "address",
      },
    ],
    name: "Vote",
    type: "event",
  },
] as const;

export class VotingBase__factory {
  static readonly abi = _abi;
  static createInterface(): VotingBaseInterface {
    return new Interface(_abi) as VotingBaseInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VotingBase {
    return new Contract(address, _abi, runner) as unknown as VotingBase;
  }
}
